name: Build and Deploy to GKE

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-central1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: helloworld-gke # TODO: update to cluster name
  GKE_ZONE: us-central1   # TODO: update to cluster zone
  DEPLOYMENT_NAME: helloworld-gke # TODO: update to deployment name
  REPOSITORY:  hello-repo # TODO: update to Artifact Registry docker repository
  IMAGE: helloworld-gke
  REGISTRY: docker.pkg.dev
  CONTAINER_NAME: hello-app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
  #  environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configure Workload Identity Federation and generate an access token.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/598451321793/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: cicd-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - id: 'meta'
        name: 'Extract Docker metadata'
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.GAR_LOCATION }}-${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}
          tags: |
            type=semver,pattern={{raw}}

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Build and push'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false

      # Print versions
      - name: Version
        run: |-
          kubectl version

      - name: Print tag for reference
        run: |-
          echo "tag ${{github.ref_name}}"

     # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          # replacing the image name in the k8s template
          set -x
          set -e
          pwd
          kustomize edit set image $GAR_LOCATION-$REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE=$GAR_LOCATION-$REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE:${{github.ref_name}}
          kustomize build . > manifest.yaml
          cat kustomization.yaml
          cat manifest.yaml
          kubectl apply -f manifest.yaml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide